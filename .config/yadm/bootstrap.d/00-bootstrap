#!/bin/bash -e

cd "$HOME"

echo "Updating"
sudo pacman -Syu --noconfirm

if ! command -v ssh >/dev/null 2>&1; then
  echo "Installing SSH"
  sudo pacman -S openssh --noconfirm --needed
fi

if [ ! -f "$HOME/.ssh/id_ed25519.pub" ]; then
  echo "Generating ssh key"
  ssh-keygen -t ed25519
fi

if [ ! -f "$XDG_CONFIG_HOME/zsh/zsh.env.local" ]; then
  echo "Generating local env file"
  touch "$XDG_CONFIG_HOME/zsh/zsh.env.local"
fi

echo "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:mpaupulaire4/arch-dots.git"

# echo "Init submodules"
# yadm submodule update --recursive --init

echo "Settting Up DNS Resolution"
sudo ln -sf /run/systemd/resolve/stub-resolve.conf /etc/resolve.conf

if ! command -v paru >/dev/null 2>&1; then
  echo 'Installing Paru'
  sudo pacman -S rustup --noconfirm
  rustup toolchain install stable
  rustup default stable
  git clone https://aur.archlinux.org/paru.git
  cd paru
  makepkg -si --needed --noconfirm
  cd ..
  rm -rf paru

  paru --gendb
  paru -S paru
fi

if [ ! -f "/etc/xdg/reflector/reflector.conf" ]; then
  echo 'Installing Reflector';
  sudo mkdir -p /etc/xdg/reflector
  sudo cp -i $HOME/.config/reflector/reflector.conf /etc/xdg/reflector/reflector.conf
  paru -S reflector --needed --noconfirm
  sudo systemctl enable --now reflector.service
fi

if ! systemctl is-enabled bluetooth.service >/dev/null 2>&1; then
  echo 'Configuring Bluetooth';
  paru -S bluez bluez-utils --needed --noconfirm
  sudo systemctl enable bluetooth.service
fi

if [ ! -f "/usr/share/nvm/init-nvm.sh" ]; then
  echo 'Installing NVM and Node';
  paru -S nvm --needed --noconfirm
  source /usr/share/nvm/init-nvm.sh
  nvm install "lts/*"
  nvm install-latest-npm
  corepack enable
fi

# if yorn 'Install Sway?'; then
#   paru -S sway grim slurp swayidle swaylock swaybg xorg-xwayland --needed
# fi
#
# if yorn 'Install I3?'; then
#   paru -S xorg-server xorg-xrandr xf86-video-intel autorandr i3-gaps --needed
# fi

if ! systemctl is-enabled ly.service >/dev/null 2>&1; then
  echo 'Installing Display Manager: ly';
  paru -S ly --needed --noconfirm
  sudo systemctl enable ly.service
fi

if ! systemctl is-enabled tlp.service >/dev/null 2>&1; then
  echo 'Instalingl and enabling power management?'
  paru -S tlp tlp-rdw --needed --noconfirm
  sudo systemctl enable tlp
  sudo systemctl mask systemd-rfkill.service systemd-rfkill.socket
fi

if ! systemctl --user is-enabled ssh-agent >/dev/null 2>&1; then
  echo 'Enable ssh agaent systemd unit?';
  systemctl --user enable ssh-agent
fi

if ! systemctl is-enabled thermald.service >/dev/null 2>&1; then
  echo "Installing and enabling thermald"
  paru -S thermald --needed --noconfirm
  sudo systemctl enable thermald.service
fi
